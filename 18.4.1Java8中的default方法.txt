在java8以后，接口中可以添加使用default或者static修饰的方法，在这里我们只讨论default方法，default修饰方法只能在接口中使用，在接口种被default标记的方法为普通方法，可以直接写方法体。

1.实现类会继承接口中的default方法
如果接口A中有default方法：
public interface A {
    public default void a(){
        System.out.println("这是A");
    }
}
Test类实现接口A：
public class Test implements A{
    
}
那么Test类将会继承接口A中的a方法：
public class Test2 {
    public static void main(String[] args) {
        Test t = new Test();
        t.a();
    }
}

2.如果一个类同时实现接口A和B，接口A和B中有相同的default方法，这时，该类必须重写接口中的default方法
为什么要重写呢？是因为，类在继承接口中的default方法时，不知道应该继承哪一个接口中的default方法。

接口A：
public interface A {
    public default void a(){
        System.out.println("这是A");
    }
}
接口B：
public interface B {
    public default void a(){
        System.out.println("这是B");
    }
}
Test类：
image.png
3.如果子类继承父类，父类中有b方法，该子类同时实现的接口中也有b方法（被default修饰），那么子类会继承父类的b方法而不是继承接口中的b方法
接口A：
public interface A {
    public default void b(){
        System.out.println("AAA");
    }
}
类C：
public class C {
    public void b(){
        System.out.println("CCC");
    }
}
子类：
public class Test extends C implements A{
    
}
测试类：


说明子类继承的b方法为父类C中的b方法，不是接口中的default b(){}方法。